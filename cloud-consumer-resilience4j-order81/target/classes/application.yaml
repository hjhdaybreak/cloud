eureka:
  instance:
    #实例名字
    instance-id: cloud-order-resilience4j-consumer81
  client:
    # Eureka Server地址
    service-url:
      defaultZone: http://localhost:7001/eureka/,http://localhost:7002/eureka/
spring:
  application:
    # 设置应用名字
    name: cloud-order-consumer
server:
  port: 81


  # 超时机制
resilience4j:
  timelimiter:
    instances:
      delay:
        # 设置超时时间 (系统默认 5 s)秒
        timeoutDuration: 2

  #重试机制
  retry:
    instances:
      backendA:
        # 最大重试次数
        maxRetryAttempts: 3
        # 固定的重试间隔
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2



#熔断机制
resilience4j.circuitbreaker:
  instances:
    backendA:
      baseConfig: default

  configs:
    default:
      # 熔断器打开的失败阈值
      failureRateThreshold: 30
      # 默认滑动窗口大小,circuitbreaker使用基于计数和时间范围欢动窗口聚合统计失败率
      slidingWindowSize: 10
      # 计算比率的最小值,即当请求发生5次才会计算失败率
      minimumNumberOfCalls: 5
      # 滑动窗口类型,默认为基于计数的滑动窗口
      slidingWindowType: TIME_BASED
      # 半开状态允许的请求数
      permittedNumberOfCallsInHalfOpenState: 3
      # 是否自动从打开到半开
      automaticTransitionFromOpenToHalfOpenEnabled: true
      # 熔断器从打开到半开需要的时间
      waitDurationInOpenState: 2s
      recordExceptions:
        - java.lang.Exception
